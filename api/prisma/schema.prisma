// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  cpf       String    @unique
  phone     String    @unique
  birthdate DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role      @default(USER)
  Address   Address?
  Product   Product[]
}

enum Role {
  ADMIN
  USER
}

model Address {
  id         String   @id @default(uuid())
  address    String
  cep        String
  state      String
  city       String
  number     String
  complement String?
  country    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String   @unique
}

model Ingredients {
  id        String  @id @default(uuid())
  item      String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model Product {
  id          String          @id @default(uuid())
  name        String
  category    String
  price       Float
  img         String?
  user        User?           @relation(fields: [userId], references: [id])
  userId      String
  Ingredients Ingredients[]
  Item        Item[]
}

model Order {
  id         String    @id @default(uuid())
  table      Int
  status     String   
  draft      Boolean   @default(true)
  name       String?
  created_at DateTime? @default(now())
  created_up DateTime? @default(now())
  items Item[]
  total Float?
}

model Item {
  id         String    @id @default(uuid())
  amount     Int
  created_at DateTime? @default(now())
  created_up DateTime? @default(now())
  order      Order   @relation(fields: [order_id], references: [id],onDelete: Cascade)
  product    Product @relation(fields: [product_id], references: [id])
  order_id   String
  product_id String
}
